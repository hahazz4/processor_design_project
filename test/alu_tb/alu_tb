`timescale 1ns/10ps
module ALU_tb;

	reg [31:0] a, b, num;
	reg [4:0] opcode;
	
	wire [31:0] ALU_result, remainder;
	wire [31:0] carry_out;

	ALU alu_unit(a, b, num, opcode, ALU_result, remainder, carry_out);

	initial
		begin
			a <= 8; //1000
			b <= 3; //0011
			num = 1;
//			carry_out <= 0;
			//result = 0010
			opcode <= 0;
			
			#100
			opcode <= 1;
			//result = 0011
			
			#100
			opcode <= 2;
			//result = 0001
			
			#100
			opcode <= 3;
			//a = 1101
			
//			#100
//			opcode <= 4;
//			//result = 0101

//			#100
//			opcode <= 7;
//			//result = 0010
//			//remainder = 0010

			#100
			opcode <= 8;
			//a = 0100
			
			#100
			opcode <= 9;
			//a = 0001
			
			#100
			opcode <= 10;
			//a = 0001
			//a = 0000 (with num = 2)
			
			#100
			opcode <= 11;
			//a = 0100
			
			#100
			opcode <= 12;
			//a = ---- (with a = 2)
			//a = 0001
			
			
		end
endmodule
